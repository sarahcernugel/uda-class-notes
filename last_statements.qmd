---
title: "Last Statements"
format: html
---

### Practice Time

```{python}
import requests
from bs4 import BeautifulSoup
import pandas as pd
from random import sample
```

```{python}
link_html = requests.get(
  'https://www.tdcj.texas.gov/death_row/dr_executed_offenders.html', 
  verify=False
  )

link_content = BeautifulSoup(link_html.content, 'html.parser')

link_list = link_content.select('a[href*="last"]')

link_list = [link_list[i].get('href') for i in range(len(link_list))]

link_list = ['https://www.tdcj.texas.gov/death_row/'+link_list[i] for i in range(len(link_list))]

link_list = [link_list[i].replace('//death_row', '') for i in range(len(link_list))]

link_list = [link_list[i] for i in range(len(link_list)) if 'no_last_statement' not in link_list[i]]

link_list = sample(link_list, 50)

for i in range(len(link_list)):
    link_html = requests.get(link_list[i], verify=False)
    link_content = BeautifulSoup(link_html.content, 'html.parser')
    link_list[i] = link_content.select('p:contains("Last Statement:")~*')
    link_list[i] = [link_list[i][j].getText() for j in range(len(link_list[i]))]
    link_list[i] = ' '.join(link_list[i])

print(link_list)
```

```{python}
#texas_pd = pd.DataFrame([link_list], columns = ['statements'])
texas_pd = pd.DataFrame(link_list, columns=['statements'])

value_counts = texas_pd['statements'].value_counts()
```


```{python}
tfidf_vec = TfidfVectorizer()

statement_tfidf = tfidf_vec.fit_transform(texas_pd['statements'])

tfidf_tokens = tfidf_vec.get_feature_names_out()

df_countvect = pd.DataFrame(data = statement_tfidf.toarray(), 
  columns = tfidf_tokens)

print(df_countvect)
```